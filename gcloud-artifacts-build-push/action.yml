# Required permissions:
#   contents: read
#   id-token: write

name: Build
description: Build and push a container image to Google Artifact Registry
inputs:
  build-args:
    description: List of build-time arguments
    required: false
  build-artifact-dir:
    description: Path to the built files directory in the container for artifact upload (newline-delimited string for each path, relative to the container's working directory)
    required: false
  build-artifact-name:
    default: build-artifact
    description: Name of the artifact containing the built files to be uploaded
  build-artifact-working-dir:
    default: /var/app
    description: Absolute path to the containerâ€™s working directory to set the upload location for built files (newline-delimited string, no trailing slash)
  build-secrets:
    description: List of build-time secrets (newline-delimited string)
    required: false
  dockerfile-path:
    default: Dockerfile
    description: Path to the Dockerfile (relative to context)
  image-artifact-dir:
    description: Path to the directory containing the built image for artifact upload (absolute or relative to working directory)
    required: false
  image-artifact-name:
    default: image-artifact
    description: Name of the artifact containing the built image to be uploaded
  image-name:
    default: ${{ github.repository }}
    description: Docker image base name (excluding GCP project ID and registry)
  image-tag-suffix:
    description: Docker image tag suffix
    required: false
  namespace:
    description: Repository namespace, i.e. GAR repository name
  push:
    default: "false"
    description: Specifies if the built image should be pushed to the registry
  registry:
    default: us-docker.pkg.dev
    description: Registry path
  service-account:
    description: GCP service account to impersonate by the Workload Identity
    required: false
  workload-identity-provider:
    description: Workload Identity Provider name, i.e. `projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider`
    required: false
outputs:
  build-artifact-dir:
    description: Path to the directory of the uploaded artifact of built files (relative to working directory)
    value: ${{ inputs.build-artifact-dir }}
  build-artifact-name:
    description: Name of the uploaded artifact of built files
    value: ${{ inputs.build-artifact-dir && inputs.build-artifact-name || '' }}
  image:
    description: The full name of built Docker image, including the registry host, repository namespace, image name and tag (highest priority tag is used)
    value: ${{ steps.build.outputs.image }}
  image-artifact-dir:
    description: Path to the directory of the uploaded artifact of the built image (absolute or relative to working directory)
    value: ${{ inputs.image-artifact-dir }}
  image-artifact-file:
    description: Path to the uploaded artifact of the built image (absolute or relative to working directory)
    value: ${{ inputs.image-artifact-dir && format('{0}/{1}.tar', inputs.image-artifact-dir, inputs.image-artifact-name) || '' }}
  image-artifact-name:
    description: Name of the uploaded artifact of the built image
    value: ${{ inputs.image-artifact-dir && inputs.image-artifact-name || '' }}
  repository:
    description: Full path to the repository in the registry including the registry host
    value: ${{ format('{0}{1}', steps.auth.outputs.repository, inputs.namespace && format('/{0}', inputs.namespace) || '') }}
  version:
    description: The highest priority tag of the built Docker image
    value: ${{ steps.build.outputs.version }}
runs:
  using: composite
  steps:
    - name: Authenticate Google Artifact Registry
      id: auth
      if: ${{ inputs.push }}
      uses: ghoztsys/actions/gcloud-artifacts-auth@master
      with:
        registry: ${{ inputs.registry }}
        service-account: ${{ inputs.service-account }}
        workload-identity-provider: ${{ inputs.workload-identity-provider }}
    - name: Build
      id: build
      uses: andrewscwei/actions/docker-build-push@v2
      with:
        build-artifact-dir: ${{ inputs.build-artifact-dir }}
        build-artifact-name: ${{ inputs.build-artifact-name }}
        build-artifact-working-dir: ${{ inputs.build-artifact-working-dir }}
        build-args: ${{ inputs.build-args }}
        build-secrets: ${{ inputs.build-secrets }}
        dockerfile-path: ${{ inputs.dockerfile-path }}
        image-artifact-dir: ${{ inputs.image-artifact-dir }}
        image-artifact-name: ${{ inputs.image-artifact-name }}
        image-name: ${{ inputs.image-name }}
        image-tag-suffix: ${{ inputs.image-tag-suffix }}
        push: ${{ inputs.push }}
        registry: ${{ format('{0}{1}', steps.auth.outputs.repository, inputs.namespace && format('/{0}', inputs.namespace) || '') }}
